{"version":3,"sources":["components/Profile.module.css","components/Post.module.css","components/NewPost.module.css","components/Navbar.module.css","components/PostThumbnail.module.css","components/App.module.css","components/Header.module.css","utils/publicUrl.js","components/Header.js","components/Post.js","utils/timespan.js","components/Home.js","components/Navbar.js","components/PostThumbnail.js","components/Profile.js","components/FileLoader.js","components/NewPost.js","components/Activity.js","components/Explore.js","utils/initialStore.js","utils/uniqueId.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","assetPath","process","Header","className","css","header","src","publicUrl","alt","Post","props","useState","comment","setComment","toggleComment","setToggleComment","post","user","photo","id","content","imgContainer","actions","likes","self","onClick","onUnlike","onLike","e","activity","count","comments","userId","desc","map","i","key","text","time","date","seconds","Math","floor","Date","interval","timespan","datetime","toUpperCase","addComment","onSubmit","event","onComment","preventDefault","type","placeholder","value","onChange","target","Home","store","findUser","users","find","findComments","filter","postId","findLikes","postLikes","like","some","currentUserId","length","posts","sort","a","b","Navbar","handleNavChange","page","onNavChange","navbar","navItem","PostThumbnail","square","image","Profile","followers","follower","following","followerId","profile","description","name","bio","followItem","followNumber","followTitle","FileLoader","handleDragEnter","bind","handleDrop","handleDragOver","handleDragLeave","stopPropagation","this","onDrop","dragTargetSaved","onDragEnter","dataTransfer","types","includes","onDragOver","onDragLeave","child","React","Children","only","children","cloneElement","PureComponent","NewPost","dragging","setDragging","setDesc","setPhoto","error","setError","handleSubmit","addPost","message","files","file","size","match","reader","FileReader","onloadend","result","readAsDataURL","dropArea","join","Activity","Explore","email","prefix","valueOf","toString","milliseconds","start","getTime","sleep","App","setPage","initialStore","setStore","addLike","toISOString","concat","removeLike","uniqueId","cancelPost","container","renderMain","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.927adca6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3I-Sz\",\"header\":\"Profile_header__2ChJJ\",\"user\":\"Profile_user__2YOKO\",\"description\":\"Profile_description__1sqjK\",\"posts\":\"Profile_posts__rwx78\",\"followers\":\"Profile_followers__1mm1E\",\"followTitle\":\"Profile_followTitle__3xPXX\",\"followNumber\":\"Profile_followNumber__2eYIk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__hw-08\",\"header\":\"Post_header__1sWQj\",\"user\":\"Post_user__SDGuF\",\"content\":\"Post_content__kMAfq\",\"imgContainer\":\"Post_imgContainer__8ZoJZ\",\"actions\":\"Post_actions__3C3ej\",\"activity\":\"Post_activity__8eLdp\",\"likes\":\"Post_likes__3N_Ej\",\"time\":\"Post_time__O-7a6\",\"comments\":\"Post_comments__3PEbR\",\"addComment\":\"Post_addComment__aGSqH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"photo\":\"NewPost_photo__2GXN3\",\"dropArea\":\"NewPost_dropArea__1QAEl\",\"dragging\":\"NewPost_dragging__3GXy5\",\"message\":\"NewPost_message__3BUtG\",\"image\":\"NewPost_image__2e7fR\",\"desc\":\"NewPost_desc__lYGQI\",\"actions\":\"NewPost_actions__1uqzu\",\"error\":\"NewPost_error__3yRfa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"Navbar_navbar__31-FB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"square\":\"PostThumbnail_square__1mMZc\",\"content\":\"PostThumbnail_content__23flp\",\"image\":\"PostThumbnail_image__3J_3H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__6j1zw\",\"content\":\"App_content__1dlDM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3mObx\"};","// utils/publicUrl.js\nexport default (assetPath)=>{\n    return process.env.PUBLIC_URL+assetPath;\n}","import React from 'react';\nimport publicUrl from 'utils/publicUrl';\nimport css from './Header.module.css';\n\nfunction Header() {\n  return (\n    <header className={css.header}>\n        <div>\n          <button>\n            <img src={publicUrl('/assets/camera.svg')} alt=\"camera\"/>\n          </button>\n        </div>\n        <div>\n          <img src={publicUrl('/assets/logo.png')} alt=\"logo\"/>\n        </div>\n        <div>\n          <button>\n            <img src={publicUrl('/assets/message.svg')} alt=\"message\"/>\n          </button>\n        </div>\n    </header>\n  );\n}\n\nexport default Header;","import React, { useState } from 'react';\nimport css from './Post.module.css'; \nimport timespan from 'utils/timespan.js';\nimport publicUrl from 'utils/publicUrl.js';\n\nfunction Post(props) {\n    const[comment, setComment] = useState('');\n    const [toggleComment, setToggleComment] = useState(false); // hidden initially\n\n    function handleLike(){\n        props.onLike(props.post.id);\n    }\n\n    function handleUnlike(){\n        props.onUnlike(props.post.id);\n    }\n\n    function handleSubmitComment(event){\n        props.onComment(props.post.id, comment); // this calls addComment from App.js\n        setComment(''); //reset\n        setToggleComment(false); //close comment box\n        event.preventDefault(); // prevent page refresh\n    }\n\n    return (\n        <article className={css.post}>\n            <header className={css.header}>\n                <button className={css.user}>\n                    <img src={publicUrl(props.user.photo)} alt='User Profile'/> \n                    <span >{props.user.id} </span>\n                </button>\n            </header>\n            <section className={css.content}>\n                <div className={css.imgContainer}>\n                <img src={publicUrl(props.post.photo)} alt='Post'/>\n                </div>\n                \n            </section>\n\n            <section className={css.actions}>\n                <button>\n                    {props.likes.self?\n                    <img src={publicUrl('/assets/unlike.svg')} alt='Unlike Action' onClick={handleUnlike}/>:\n                    <img src={publicUrl('/assets/like.svg')} alt='Like Action' onClick={handleLike}/> \n                    }\n                </button>\n                <button onClick={e=>setToggleComment(!toggleComment)}>\n                    <img src={publicUrl('/assets/comment.svg')} alt='Comment Action'/> \n                </button>\n            </section>\n            <section className={css.activity}>\n                <div className={css.likes.count}>\n                    {props.likes.count} likes\n                </div>\n                <div className={css.comments}>\n                    <div>\n                        <span>{props.post.userId}</span>\n                        <span>{props.post.desc}</span>\n                    </div>      \n                    {props.comments.map((comment,i)=>\n                        <div key={i}>\n                            <span>{comment.userId}</span>\n                            <span>{comment.text}</span>\n                        </div>                        \n                    )}\n                </div>\n                <time className={css.time}>\n                    {timespan(props.post.datetime).toUpperCase()} AGO\n                </time>\n            </section>\n            {toggleComment && <form className={css.addComment} onSubmit={handleSubmitComment}>\n                <input type=\"text\" placeholder=\"Add a comment…\" value={comment} onChange={e=>setComment(e.target.value)}/>\n                <button type=\"submit\">Post</button>\n            </form>}\n\n        </article>\n    );\n}\n\nexport default Post;\n","// return time elapsed \nexport default (date)=>{\n    var seconds = Math.floor((new Date() - new Date(date)) / 1000);\n\n    var interval = Math.floor(seconds / 31556926);\n  \n    if (interval >= 1) {\n      return interval + \" years\";\n    }\n    interval = Math.floor(seconds / 2592000);\n    if (interval >= 1) {\n      return interval + \" months\";\n    }\n    interval = Math.floor(seconds / 86400);\n    if (interval >= 1) {\n      return interval + \" days\";\n    }\n    interval = Math.floor(seconds / 3600);\n    if (interval >= 1) {\n      return interval + \" hours\";\n    }\n    interval = Math.floor(seconds / 60);\n    if (interval >= 1) {\n      return interval + \" minutes\";\n    }\n    return Math.floor(seconds) + \" seconds\";\n}","import React from 'react';\nimport Post from './Post';\n\nfunction Home(props) {\n  const {store} = props;\n\n  function findUser(post){\n    return store.users.find(user=>user.id===post.userId);\n  }\n\n  function findComments(post){\n    return store.comments.filter(comment=>comment.postId===post.id);\n  }\n\n  function findLikes(post){\n    let postLikes = store.likes.filter(like=>like.postId===post.id);\n    return {\n      self: postLikes.some(like=> like.userId===store.currentUserId),\n      count: postLikes.length\n    }\n  }\n\n\treturn (\n\t\t<div>\n      {store.posts.sort((a,b)=>new Date(b.datetime) - new Date(a.datetime))\n      .map(post=>\n\t\t\t\t<Post\n\t        key={post.id}\n\t        user={findUser(post, store)}\n\t        post={post}\n\t        comments={findComments(post, store)}\n          likes={findLikes(post, store)}\n          onLike={props.onLike}\n          onUnlike={props.onUnlike}\n          onComment={props.onComment}\n\t      />)}\n    </div>\n\t);\n}\n\nexport default Home;\n","import React from 'react';\nimport css from './Navbar.module.css';\nimport publicUrl from '/Users/erinberg/Desktop/Web Apps/social-media-erinberg24/social-media-erinberg24/src/utils/publicUrl.js';\n\nfunction Navbar(props) {\n    function handleNavChange(page){\n        if (props.onNavChange){\n            props.onNavChange(page);\n        }\n    }\n\n    return (\n        <nav className={css.navbar}>\n            <div className={css.navItem}>\n                <button onClick={e=>handleNavChange('home')}>\n                    <img src={publicUrl('/assets/home.svg')} alt=\"Home\"/>\n                </button>\n            </div>\n            <div className={css.navItem}>\n                <button onClick={e=>handleNavChange('explore')}>\n                    <img src={publicUrl('/assets/explore.svg')} alt=\"Explore\"/>\n                </button>\n            </div>\n\t\t\t<div className={css.navItem}>\n                <button onClick={e=>handleNavChange('newpost')}>\n                    <img src={publicUrl('/assets/newpost.svg')} alt=\"NewPost\"/>\n                </button>\n            </div>\n\t\t\t<div className={css.navItem}>\n                <button onClick={e=>handleNavChange('activity')}>\n                    <img src={publicUrl('/assets/activity.svg')} alt=\"Activity\"/>\n                </button>\n            </div>\n\t\t\t<div className={css.navItem}>\n                <button onClick={e=>handleNavChange('profile')}>\n                    <img src={publicUrl('/assets/profile.svg')} alt=\"Profile\"/>\n                </button>\n            </div>\n        </nav>\n    );\n}\n\nexport default Navbar;","import React from 'react';\nimport css from './PostThumbnail.module.css';\nimport publicUrl from 'utils/publicUrl';\n\nfunction PostThumbnail(props) {\n  return (\n    <div className={css.square}>\n      <div className={css.content}>\n        <img className={css.image} src={publicUrl(props.post.photo)} alt=\"Post Thumbnail\"/>\n      </div>\n        \n    </div>\n  );\n}\n\nexport default PostThumbnail;\n\n","import React from 'react';\nimport css from './Profile.module.css'; \nimport PostThumbnail from './PostThumbnail.js';\nimport publicUrl from 'utils/publicUrl';\n\n\nfunction Profile(props) {\n  const {store} = props;\n\n  const userId = store.currentUserId;\n  const user = store.users.find(user=>user.id===store.currentUserId);\n  const posts = store.posts.filter(post=>(post.userId===userId));\n  const followers = store.followers.filter(follower=>(follower.userId===userId))\n  const following = store.followers.filter(follower=>(follower.followerId===userId))\n\n  return (\n    <article className={css.profile}>\n        <header className={css.header}>\n          <div className={css.user}>\n            <img src={publicUrl(user.photo)} alt='Profile'/> \n            <span >{user.id} </span>\n          </div>\n        </header>\n        <section className={css.description}>\n          <span> {user.name}</span>\n          <div>{user.bio}</div>\n        </section>\n        <section className={css.followers}>\n          <hr></hr>\n          <span>\n            <div className={css.followItem}>\n              <div className={css.followNumber}>\n                {posts.length}\n              </div>\n              <div className={css.followTitle}>\n                posts\n              </div>\n            </div>\n            <div className={css.followItem}>\n              <div className={css.followNumber}>\n                {following.length}\n              </div>\n              <div className={css.followTitle}>\n                following\n              </div>\n            </div>\n            <div className={css.followItem}>\n              <div className={css.followNumber}>\n                {followers.length}\n              </div>\n              <div className={css.followTitle}>\n                followers\n              </div>\n            </div>\n          </span>\n        </section>\n        <section className={css.posts}>\n            {posts.sort((a,b)=>new Date(b.datetime) - new Date(a.datetime))\n            .map(post=>\n              <PostThumbnail\n                key={post.id} post={post}\n              />)}\n        </section>\n    </article>\n  );\n}\n\nexport default Profile;\n","  \nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nclass FileLoader extends PureComponent {\n\tconstructor(props){\n\t\tsuper(props);\n\n\t\tthis.handleDragEnter = this.handleDragEnter.bind(this);\n\t\tthis.handleDrop = this.handleDrop.bind(this);\n\t\tthis.handleDragOver = this.handleDragOver.bind(this);\n\t\tthis.handleDragLeave = this.handleDragLeave.bind(this);\n\t}\n\thandleDrop(e){\n\t\te.preventDefault();\n\t\te.stopPropagation();\n\t\tif (this.props.onDrop){\n\t\t\tthis.props.onDrop(e);\n\t\t}\n\t}\n\thandleDragEnter(e){\n\t\te.preventDefault();\n\t\te.stopPropagation();\n\t\tthis.dragTargetSaved=e.target;\n\t\tif (this.props.onDragEnter){\n\t\t\tthis.props.onDragEnter(e);\n\t\t}\n\t}\n\thandleDragOver(e){\n\t\tif (e.dataTransfer.types.includes('Files')===false){\n\t\t\treturn;\n\t\t}\n\t\te.preventDefault();\n\t\te.stopPropagation();\n\t\tif (this.props.onDragOver){\n\t\t\tthis.props.onDragOver(e);\n\t\t}\n\t}\n\thandleDragLeave(e){\n\t\te.preventDefault();\n\t\te.stopPropagation();\n\t\tif (this.props.onDragLeave &&  this.dragTargetSaved===e.target){\n\t\t\tthis.props.onDragLeave(e);\n\t\t}\n\t}\n\n\trender () {\n\t\tlet child = React.Children.only(this.props.children);\n\t\treturn  React.cloneElement(child,\n\t\t\t{\t\n\t\t\t\tonDragEnter: this.handleDragEnter,\n\t\t\t\tonDragOver: this.handleDragOver,\n\t\t\t\tonDragLeave: this.handleDragLeave,\n\t\t\t\tonDrop: this.handleDrop\n\n\t\t\t});\n\t\n\t}\n}\n\nFileLoader.propTypes = {\n\tonDrop:PropTypes.func,\n\tonDragEnter:PropTypes.func,\n\tonDragOver:PropTypes.func,\n\tonDragLeave:PropTypes.func,\n\tchildren:PropTypes.element.isRequired,\n};\n\nexport default FileLoader;","import React, { useState } from 'react';\nimport css from './NewPost.module.css';\nimport FileLoader from './FileLoader.js';\n\nfunction NewPost(props) {\n  const [dragging, setDragging] = useState(false); // to show a dragging effect\n  const [desc, setDesc] = useState('');\n  const [photo, setPhoto] = useState(null);\n  const [error, setError] = useState(''); // to show an error message\n\n  function handleFileDragEnter(e){\n    setDragging(true);\n  }\n  function handleFileDragLeave(e){\n    setDragging(false);\n  }\n  function handleFileDrop(e){\n    if (e.dataTransfer.types.includes('Files')===false){\n\t\t\treturn;\n    }\n    if (e.dataTransfer.files.length>=1){\n      let file = e.dataTransfer.files[0];\n      if (file.size>1000000){// larger than 1 MB\n        return;\n      }\n      if (file.type.match(/image.*/)){\n\t\t\t\tlet reader = new FileReader();\t\t\t\n\t\t\t\treader.onloadend = (e) => {\n          // TODO: call setPhoto with e.target.result (this is a Base64 image string)\n          setPhoto(e.target.result);\n\t\t\n\t\t\t\t};\n\t\t\t\treader.readAsDataURL(file);\n\t\t\t}\n    }\n    setDragging(false);    \n  }\n  function handleDescChange(e){\n\t\tsetDesc(e.target.value)\n  }\n  function handleSubmit(e){\n\t\t// TODO:\n\t\t// 1. Prevent default behavior\n\t\t// 2. Show error msg if failed and exit\n\t\t// 3. Call the storage update function passed from the parent\n    // 3. Clear error msg\n    e.preventDefault();\n    if(error){\n      return;\n    }\n    props.addPost(photo, desc);\n    setError('');\n  }\n  function handleCancel(){\n    // TODO: Notify the parent about the cancellation\n\n  }\n  return (\n    <div>\n        \n        <div className={css.photo}>\n          {!photo?  <div className={css.message}>Drop your image</div>:\n                    <img src={photo} alt=\"New Post\"/>}\n            <FileLoader\n              onDragEnter={handleFileDragEnter}\n              onDragLeave={handleFileDragLeave}\n              onDrop={handleFileDrop}\n            >\n\t            <div className={[css.dropArea, dragging?css.dragging:null].join(' ')}\n              ></div>\n\t          </FileLoader>\n          \n        </div>\n        \n        <div className={css.desc} >\n          <form className={css.desc} onSubmit={handleSubmit}>\n                <input type=\"text\" placeholder=\"Add a description…\" value={desc} onChange={handleDescChange}/>\n          </form>}\n        </div>\n        <div className={css.error}>\n\t\t\t\t\t{/* TODO: show error message */}\n        </div>\n        <div className={css.actions}>\n          <button onClick={handleCancel}>Cancel</button>\n          <button onClick={handleSubmit}>Share</button>          \n        </div>\n    </div>\n  );\n}\n\nexport default NewPost;","import React from 'react';\n\nfunction Activity(props) {\n  return (\n    <div>\n        Activity\n    </div>\n  );\n}\n\nexport default Activity;","import React from 'react';\n\nfunction Explore(props) {\n  return (\n    <div>\n        Explore\n    </div>\n  );\n}\n\nexport default Explore;","/* sample data store*/\nexport default { \n    currentUserId: \"judy\",\n    users:[\n        {\n            id:\"judy\",\n            email:\"judy@bc.edu\",\n            photo:\"/assets/user1.png\",\n            name: \"Judy Hopps\",\n            bio:\"The first rabbit officer of the Zootopia Police Department. Judy is determined to make the world a better place while breaking preconceptions about other species.\",\n            \n        },\n        {\n            id:\"nick\",\n            email:\"nick@bc.edu\",\n            photo:\"/assets/user2.png\",\n            name:\"Nick Wilde\",\n            bio:\"Nick is a charming, small-time, con artist fox with a big mouth and a lot of opinions. But when a rabbit cop outsmarts him, he finds himself actually helping her solve a mystery.\"\n        },\n\n        {\n            id:\"flash\",\n            email:\"flash@bc.edu\",\n            photo:\"/assets/user3.png\",\n            name: \"Flash Slothmore\",\n            bio:\"Flash is a male three-toed sloth and a supporting character in Zootopia. He works at the Department of Mammal Vehicles.\",\n            \n        }\n    ],\n    followers:[\n        {\n            userId:\"nick\",\n            followerId:\"judy\"\n        },\n        {\n            userId:\"judy\",\n            followerId:\"nick\"\n        },\n        {\n            userId:\"judy\",\n            followerId:\"flash\"\n        }\n    ],\n    posts:[\n        {   \n            id:\"post-1\",\n            userId:\"judy\",\n            photo:\"/assets/post1.png\",\n            desc:\"#zootopia #excited\",\n            datetime: \"2020-02-09T22:45:28Z\",   \n\n        },\n        {\n            id:\"post-2\",\n            userId:\"nick\",\n            photo:\"/assets/post2.png\",\n            desc:\"#happy #selfie with Judy\",\n            datetime: \"2020-02-06T22:45:28Z\",\n        },\n        {\n            id:\"post-3\",\n            userId:\"flash\",\n            photo:\"/assets/post3.png\",\n            desc:\"Don't worry I got this\",\n            datetime: \"2020-02-03T22:45:28Z\",\n        },\n        {\n            id:\"post-4\",\n            userId:\"judy\",\n            photo:\"/assets/post4.png\",\n            desc:\"Just trying to make a #friend\",\n            datetime: \"2020-02-06T22:45:28Z\",\n        },\n        {\n            id:\"post-5\",\n            userId:\"judy\",\n            photo:\"/assets/post5.png\",\n            desc:\"I am now the first rabbit officer!\",\n            datetime: \"2020-02-06T22:45:28Z\",\n        },\n        {\n            id:\"post-6\",\n            userId:\"judy\",\n            photo:\"/assets/post6.png\",\n            desc:\"Having #goodtimes with folks here\",\n            datetime: \"2020-02-06T22:45:28Z\",\n        },\n    ],\n    comments:[\n        {\n            userId:\"nick\",\n            postId:\"post-1\",\n            text:\"Welcome to Zootopia!\",\n            datetime:\"2020-02-09T22:51:40Z\"\n        },\n        {\n            userId:\"judy\",\n            postId:\"post-1\",\n            text:\"Thanks!😁Looking forward to meeting you!\", \n            datetime:\"2020-02-09T22:52:01Z\"\n        },\n        {\n            userId:\"flash\",\n            postId:\"post-2\",\n            text:\"Looking good you two! 🐰🦊\", \n            datetime:\"2020-02-09T22:54:20Z\"\n        }\n    ],\n    likes:[\n        {\n            userId:\"judy\",\n            postId:\"post-1\",\n            datetime:\"2020-02-09T22:50:40Z\"\n        },\n        {\n            userId:\"nick\",\n            postId:\"post-2\",\n            datetime:\"2020-02-09T22:51:40Z\"\n        },\n        {\n            userId:\"flash\",\n            postId:\"post-2\",\n            datetime:\"2020-02-09T22:54:20Z\"\n        },\n        {\n            userId:\"judy\",\n            postId:\"post-3\",\n            datetime:\"2020-02-09T22:53:40Z\"\n        }\n    ]\n}\n\n","  \nfunction sleep(milliseconds) {\n\tvar start = new Date().getTime();\n\tfor (var i = 0; i < 1e7; i++) {\n\t\tif ((new Date().getTime() - start) > milliseconds){\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\nexport default (prefix) => { // TODO use shortid \n\tlet id = new Date().valueOf().toString(36);\n\tsleep(1);// wait for one millisecond\n\treturn (prefix ? prefix + id\t: id);\n};","import React, { useState } from 'react';\nimport css from './App.module.css';\nimport Header from './Header';\nimport Home from './Home';\nimport Navbar from './Navbar';\nimport Profile from './Profile';\nimport NewPost from './NewPost';\nimport Activity from './Activity';\nimport Explore from './Explore';\nimport initialStore from 'utils/initialStore';\nimport uniqueId from 'utils/uniqueId';\n\nfunction App() {\n  const [page, setPage] = useState('home');\n  const [store, setStore] = useState(initialStore);\n\n  function renderMain(page) {\n    switch(page){\n      case 'home':\n        return <Home store={store} onLike={addLike} onUnlike={removeLike} onComment={addComment}/>;\n      case 'explore':\n        return <Explore/>;\n      case 'newpost':\n        return <NewPost store={store} addPost={addPost} cancelPost={cancelPost} />;\n      case 'activity':\n        return <Activity/>;\n      case 'profile':\n        return <Profile store={store}/>;\n      default:\n        return <Home store={store}\n        onLike={addLike} \n        onUnlike={removeLike}\n        onComment={addComment} \n         />;\n    }\n  }\n\n  function addLike(postId){\n    const like = {\n        userId: store.currentUserId, \n        postId,\n        datetime: new Date().toISOString()\n    };\n    \n    setStore({\n      ...store,\n      likes: store.likes.concat(like)\n    });\n  }\n\n  function removeLike(postId){\n    // use filter and currentUserId to remove the like from the likes array\n    //const like = {\n    //  userId: store.currentUserId, \n    //  postId,\n    //  datetime: new Date().toISOString()\n    //};\n    \n    setStore({\n      ...store,\n      likes: store.likes.filter(like=>!(like.userId===store.currentUserId && like.postId===postId))\n    });\n  }\n\n  function addComment(postId, text){\n    const comment = {\n      userId: store.currentUserId, \n      postId,\n      text,\n      datetime: new Date().toISOString()\n    };\n    setStore({\n      ...store,\n        comments:store.comments.concat(comment)\n    });\n  }\n\n  function addPost(photo, desc){\n\t\t// TODO:\n\t\t// 1. Create a new post object (use uniqueId('post') to create an id)\n\t\t// 2. Update the store \n    // 3. Call setPage to come back to the home page\n    const post = {\n      id: uniqueId('post'),\n      userId: store.currentUserId,\n      photo,\n      desc,\n      datetime: new Date().toISOString()\n    };\n    setStore({\n      ...store,\n      posts: store.posts.concat(post)\n\n    })\n    setPage('home');\n  }\n\n  function cancelPost(){\n\t\t// TODO:\n    // 1. Call setPage to come back to the home page (we will use Router to improve this)\n    setPage('home');\n\t}\n\n  return (\n    <div className={css.container}>\n\t    <Header/>\n      <main className={css.content}>\n        {renderMain(page)}        \n      </main>\n      <Navbar onNavChange={setPage}/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}